{"ast":null,"code":"import Reference from '../Reference';\nexport default class ReferenceSet {\n  constructor() {\n    this.list = void 0;\n    this.refs = void 0;\n    this.list = new Set();\n    this.refs = new Map();\n  }\n\n  get size() {\n    return this.list.size + this.refs.size;\n  }\n\n  describe() {\n    const description = [];\n\n    for (const item of this.list) description.push(item);\n\n    for (const [, ref] of this.refs) description.push(ref.describe());\n\n    return description;\n  }\n\n  toArray() {\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\n  }\n\n  resolveAll(resolve) {\n    return this.toArray().reduce((acc, e) => acc.concat(Reference.isRef(e) ? resolve(e) : e), []);\n  }\n\n  add(value) {\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\n  }\n\n  delete(value) {\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\n  }\n\n  clone() {\n    const next = new ReferenceSet();\n    next.list = new Set(this.list);\n    next.refs = new Map(this.refs);\n    return next;\n  }\n\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.list.forEach(value => next.add(value));\n    newItems.refs.forEach(value => next.add(value));\n    removeItems.list.forEach(value => next.delete(value));\n    removeItems.refs.forEach(value => next.delete(value));\n    return next;\n  }\n\n}","map":{"version":3,"names":["Reference","ReferenceSet","constructor","list","refs","Set","Map","size","describe","description","item","push","ref","toArray","Array","from","concat","values","resolveAll","resolve","reduce","acc","e","isRef","add","value","set","key","delete","clone","next","merge","newItems","removeItems","forEach"],"sources":["C:/Project/Mini_Social_Media/client/node_modules/yup/es/util/ReferenceSet.js"],"sourcesContent":["import Reference from '../Reference';\r\nexport default class ReferenceSet {\r\n  constructor() {\r\n    this.list = void 0;\r\n    this.refs = void 0;\r\n    this.list = new Set();\r\n    this.refs = new Map();\r\n  }\r\n\r\n  get size() {\r\n    return this.list.size + this.refs.size;\r\n  }\r\n\r\n  describe() {\r\n    const description = [];\r\n\r\n    for (const item of this.list) description.push(item);\r\n\r\n    for (const [, ref] of this.refs) description.push(ref.describe());\r\n\r\n    return description;\r\n  }\r\n\r\n  toArray() {\r\n    return Array.from(this.list).concat(Array.from(this.refs.values()));\r\n  }\r\n\r\n  resolveAll(resolve) {\r\n    return this.toArray().reduce((acc, e) => acc.concat(Reference.isRef(e) ? resolve(e) : e), []);\r\n  }\r\n\r\n  add(value) {\r\n    Reference.isRef(value) ? this.refs.set(value.key, value) : this.list.add(value);\r\n  }\r\n\r\n  delete(value) {\r\n    Reference.isRef(value) ? this.refs.delete(value.key) : this.list.delete(value);\r\n  }\r\n\r\n  clone() {\r\n    const next = new ReferenceSet();\r\n    next.list = new Set(this.list);\r\n    next.refs = new Map(this.refs);\r\n    return next;\r\n  }\r\n\r\n  merge(newItems, removeItems) {\r\n    const next = this.clone();\r\n    newItems.list.forEach(value => next.add(value));\r\n    newItems.refs.forEach(value => next.add(value));\r\n    removeItems.list.forEach(value => next.delete(value));\r\n    removeItems.refs.forEach(value => next.delete(value));\r\n    return next;\r\n  }\r\n\r\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,eAAe,MAAMC,YAAN,CAAmB;EAChCC,WAAW,GAAG;IACZ,KAAKC,IAAL,GAAY,KAAK,CAAjB;IACA,KAAKC,IAAL,GAAY,KAAK,CAAjB;IACA,KAAKD,IAAL,GAAY,IAAIE,GAAJ,EAAZ;IACA,KAAKD,IAAL,GAAY,IAAIE,GAAJ,EAAZ;EACD;;EAEO,IAAJC,IAAI,GAAG;IACT,OAAO,KAAKJ,IAAL,CAAUI,IAAV,GAAiB,KAAKH,IAAL,CAAUG,IAAlC;EACD;;EAEDC,QAAQ,GAAG;IACT,MAAMC,WAAW,GAAG,EAApB;;IAEA,KAAK,MAAMC,IAAX,IAAmB,KAAKP,IAAxB,EAA8BM,WAAW,CAACE,IAAZ,CAAiBD,IAAjB;;IAE9B,KAAK,MAAM,GAAGE,GAAH,CAAX,IAAsB,KAAKR,IAA3B,EAAiCK,WAAW,CAACE,IAAZ,CAAiBC,GAAG,CAACJ,QAAJ,EAAjB;;IAEjC,OAAOC,WAAP;EACD;;EAEDI,OAAO,GAAG;IACR,OAAOC,KAAK,CAACC,IAAN,CAAW,KAAKZ,IAAhB,EAAsBa,MAAtB,CAA6BF,KAAK,CAACC,IAAN,CAAW,KAAKX,IAAL,CAAUa,MAAV,EAAX,CAA7B,CAAP;EACD;;EAEDC,UAAU,CAACC,OAAD,EAAU;IAClB,OAAO,KAAKN,OAAL,GAAeO,MAAf,CAAsB,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,CAACL,MAAJ,CAAWhB,SAAS,CAACuB,KAAV,CAAgBD,CAAhB,IAAqBH,OAAO,CAACG,CAAD,CAA5B,GAAkCA,CAA7C,CAAlC,EAAmF,EAAnF,CAAP;EACD;;EAEDE,GAAG,CAACC,KAAD,EAAQ;IACTzB,SAAS,CAACuB,KAAV,CAAgBE,KAAhB,IAAyB,KAAKrB,IAAL,CAAUsB,GAAV,CAAcD,KAAK,CAACE,GAApB,EAAyBF,KAAzB,CAAzB,GAA2D,KAAKtB,IAAL,CAAUqB,GAAV,CAAcC,KAAd,CAA3D;EACD;;EAEDG,MAAM,CAACH,KAAD,EAAQ;IACZzB,SAAS,CAACuB,KAAV,CAAgBE,KAAhB,IAAyB,KAAKrB,IAAL,CAAUwB,MAAV,CAAiBH,KAAK,CAACE,GAAvB,CAAzB,GAAuD,KAAKxB,IAAL,CAAUyB,MAAV,CAAiBH,KAAjB,CAAvD;EACD;;EAEDI,KAAK,GAAG;IACN,MAAMC,IAAI,GAAG,IAAI7B,YAAJ,EAAb;IACA6B,IAAI,CAAC3B,IAAL,GAAY,IAAIE,GAAJ,CAAQ,KAAKF,IAAb,CAAZ;IACA2B,IAAI,CAAC1B,IAAL,GAAY,IAAIE,GAAJ,CAAQ,KAAKF,IAAb,CAAZ;IACA,OAAO0B,IAAP;EACD;;EAEDC,KAAK,CAACC,QAAD,EAAWC,WAAX,EAAwB;IAC3B,MAAMH,IAAI,GAAG,KAAKD,KAAL,EAAb;IACAG,QAAQ,CAAC7B,IAAT,CAAc+B,OAAd,CAAsBT,KAAK,IAAIK,IAAI,CAACN,GAAL,CAASC,KAAT,CAA/B;IACAO,QAAQ,CAAC5B,IAAT,CAAc8B,OAAd,CAAsBT,KAAK,IAAIK,IAAI,CAACN,GAAL,CAASC,KAAT,CAA/B;IACAQ,WAAW,CAAC9B,IAAZ,CAAiB+B,OAAjB,CAAyBT,KAAK,IAAIK,IAAI,CAACF,MAAL,CAAYH,KAAZ,CAAlC;IACAQ,WAAW,CAAC7B,IAAZ,CAAiB8B,OAAjB,CAAyBT,KAAK,IAAIK,IAAI,CAACF,MAAL,CAAYH,KAAZ,CAAlC;IACA,OAAOK,IAAP;EACD;;AApD+B"},"metadata":{},"sourceType":"module"}